import React, { CSSProperties } from 'react';
import BaseComponent from '../_base/baseComponent';
import SliderFoundation, { SliderAdapter, SliderProps as BasicSliceProps, SliderState } from '@douyinfe/semi-foundation/lib/cjs/slider/foundation';
import '@douyinfe/semi-foundation/lib/cjs/slider/slider.css';
export interface SliderProps extends BasicSliceProps {
    style?: CSSProperties;
    railStyle?: CSSProperties;
}
export type { SliderState };
export default class Slider extends BaseComponent<SliderProps, SliderState> {
    static propTypes: any;
    static defaultProps: Partial<SliderProps>;
    private sliderEl;
    private minHanleEl;
    private maxHanleEl;
    private dragging;
    private eventListenerSet;
    private handleDownEventListenerSet;
    foundation: SliderFoundation;
    constructor(props: SliderProps);
    get adapter(): SliderAdapter;
    componentDidMount(): void;
    componentDidUpdate(prevProps: SliderProps, prevState: SliderState): void;
    componentWillUnmount(): void;
    renderHandle: () => React.JSX.Element;
    renderTrack: () => React.JSX.Element;
    renderStepDot: () => React.JSX.Element;
    renderLabel: () => React.JSX.Element;
    _getAriaValueText: (value: number, index?: number) => string | number;
    render(): React.JSX.Element;
    private _addEventListener;
}
