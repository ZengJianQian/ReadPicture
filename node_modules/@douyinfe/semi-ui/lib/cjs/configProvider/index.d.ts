import React from 'react';
import PropTypes from 'prop-types';
import { ContextValue } from './context';
export interface ConfigProviderProps extends ContextValue {
}
export declare const ConfigConsumer: React.Consumer<ContextValue>;
export default class ConfigProvider extends React.Component<ConfigProviderProps> {
    constructor(props: ConfigProviderProps);
    static propTypes: {
        locale: PropTypes.Requireable<object>;
        timeZone: PropTypes.Requireable<NonNullable<string | number>>;
        getPopupContainer: PropTypes.Requireable<(...args: any[]) => any>;
        direction: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        locale: import("../locale/interface").Locale;
        direction: string;
    };
    renderChildren(): string | number | boolean | Iterable<React.ReactNode> | React.JSX.Element;
    render(): React.JSX.Element;
}
