"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _constants = require("@douyinfe/semi-foundation/lib/cjs/descriptions/constants");
require("@douyinfe/semi-foundation/lib/cjs/descriptions/descriptions.css");
var _getDataAttr = _interopRequireDefault(require("@douyinfe/semi-foundation/lib/cjs/utils/getDataAttr"));
var _descriptionsContext = _interopRequireDefault(require("./descriptions-context"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
const prefixCls = _constants.cssClasses.PREFIX;
const keyCls = `${prefixCls}-key`;
const valCls = `${prefixCls}-value`;
class Item extends _react.PureComponent {
  render() {
    const _a = this.props,
      {
        itemKey,
        hidden,
        className,
        span,
        style,
        children
      } = _a,
      rest = __rest(_a, ["itemKey", "hidden", "className", "span", "style", "children"]);
    const {
      align,
      layout
    } = this.context;
    if (hidden) {
      return null;
    }
    const plainItem = /*#__PURE__*/_react.default.createElement("td", {
      className: `${prefixCls}-item`,
      colSpan: span || 1
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: keyCls
    }, itemKey, ":"), /*#__PURE__*/_react.default.createElement("span", {
      className: valCls
    }, typeof children === 'function' ? children() : children));
    const alignItem = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("th", {
      className: `${prefixCls}-item ${prefixCls}-item-th`
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: keyCls
    }, itemKey)), /*#__PURE__*/_react.default.createElement("td", {
      className: `${prefixCls}-item ${prefixCls}-item-td`,
      colSpan: span ? span * 2 - 1 : 1
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: valCls
    }, typeof children === 'function' ? children() : children)));
    const item = align === 'plain' ? (/*#__PURE__*/_react.default.createElement("tr", Object.assign({
      className: className,
      style: style
    }, (0, _getDataAttr.default)(rest)), plainItem)) : (/*#__PURE__*/_react.default.createElement("tr", Object.assign({
      className: className,
      style: style
    }, (0, _getDataAttr.default)(rest)), alignItem));
    const horizontalItem = align === 'plain' ? plainItem : alignItem;
    return layout === 'horizontal' ? horizontalItem : item;
  }
}
exports.default = Item;
Item.propTypes = {
  itemKey: _propTypes.default.node,
  hidden: _propTypes.default.bool,
  className: _propTypes.default.string,
  style: _propTypes.default.object
};
Item.contextType = _descriptionsContext.default;