"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _avatar = _interopRequireDefault(require("../../avatar"));
var _constants = require("@douyinfe/semi-foundation/lib/cjs/chat/constants");
var _classnames = _interopRequireDefault(require("classnames"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const {
  PREFIX_CHAT_BOX
} = _constants.cssClasses;
const ChatBoxAvatar = /*#__PURE__*/_react.default.memo(props => {
  const {
    role,
    customRenderFunc,
    continueSend,
    message
  } = props;
  const node = (0, _react.useMemo)(() => {
    const {
      avatar,
      color
    } = role;
    return /*#__PURE__*/_react.default.createElement(_avatar.default, {
      className: (0, _classnames.default)(`${PREFIX_CHAT_BOX}-avatar`, {
        [`${PREFIX_CHAT_BOX}-avatar-hidden`]: continueSend
      }),
      src: avatar,
      size: "extra-small"
    });
  }, [role]);
  if (customRenderFunc && typeof customRenderFunc === 'function') {
    return customRenderFunc({
      role,
      defaultAvatar: node,
      message: message
    });
  }
  return node;
});
var _default = exports.default = ChatBoxAvatar;